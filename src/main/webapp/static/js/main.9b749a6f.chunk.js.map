{"version":3,"sources":["serviceWorker.js","services/CourseService.js","components/CourseRowComponent.js","components/CourseTableComponent.js","components/CourseCardComponent.js","components/CourseGridComponent.js","containers/CourseManagerContainer.js","components/ModuleComponent.js","containers/ModuleListContainer.js","components/LessonTabComponent.js","containers/LessonTabsContainer.js","components/TopicPillComponent.js","containers/TopicPillsContainer.js","containers/CourseEditorContainer.js","WhiteBoard.js","index.js"],"names":["Boolean","window","location","hostname","match","url","course","fetch","method","body","JSON","stringify","headers","then","response","json","allCourses","courseId","CourseRowComponent","state","editing","props","setEditing","setState","ok","CourseService","_id","status","updateCourseTitle","newTitle","prevState","title","className","scope","this","to","onChange","event","target","value","owner","modified","onClick","removeCourse","React","Component","CourseTableComponent","colSpan","courses","map","key","CourseCardComponent","CourseGridComponent","CourseManagerContainer","layout","params","newCourseTitle","setLayout","history","push","addCourse","Date","toDateString","theActualNewCourse","courseGoingByeBye","filter","courseArray","prevProps","snapshot","console","log","id","placeholder","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","ModuleComponent","module","ModuleListContainer","modules","LessonTabComponent","lesson","LessonTabsContainer","lessons","TopicPillComponent","topic","TopicPillsContainer","topics","CourseEditorContainer","WhiteBoard","path","exact","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"iRAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+DCjBAC,EAAM,kEAoCG,EAlCM,SAACC,GAAD,OACjBC,MAAMF,EAAK,CACPG,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WA0BpB,EAxBQ,kBACnBR,MAAMF,GACDQ,MAAK,SAAAG,GAAU,OAAIA,EAAWD,WAsBxB,EAhBM,SAACE,EAAUX,GAAX,OACjBC,MAAMF,EAAM,IAAMY,EAAU,CACxBT,OAAQ,MACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAQpB,EANM,SAAAE,GAAQ,OACzBV,MAAMF,EAAM,IAAMY,EAAU,CACxBT,OAAQ,WAEPK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCuCpBG,E,4MApEXC,MAAQ,CACJC,SAAS,EACTd,OAAQ,EAAKe,MAAMf,Q,EAGvBgB,WAAa,SAACF,GAAD,OACT,EAAKG,SAAS,CAACH,QAASA,K,EAE5BI,GAAK,kBACDC,EACI,EAAKN,MAAMb,OAAOoB,IAClB,EAAKP,MAAMb,QAEVO,MAAK,SAAAc,GAAM,OAAI,EAAKL,YAAW,O,EAExCM,kBAAoB,SAAAC,GAAQ,OACxB,EAAKN,UAAS,SAAAO,GAAS,MAAK,CACxBxB,OAAO,2BACAwB,EAAUxB,QADX,IAEFyB,MAAOF,S,uDAIT,IAAD,OACL,OACI,wBAAIG,UAAU,8BACV,wBAAIC,MAAM,QAEDC,KAAKf,MAAMC,SACZ,kBAAC,IAAD,CAAMY,UAAU,iBAAiBG,GAAE,kBAAaD,KAAKf,MAAMb,OAAOoB,MAC7DQ,KAAKf,MAAMb,OAAOyB,OAIvBG,KAAKf,MAAMC,SACX,2BACAY,UAAU,eACVI,SAAU,SAACC,GAAD,OAAW,EAAKT,kBAAkBS,EAAMC,OAAOC,QACzDA,MAAOL,KAAKf,MAAMb,OAAOyB,SAGjC,wBAAIC,UAAU,cAAcE,KAAKf,MAAMb,OAAOkC,OAC9C,wBAAIR,UAAU,sBAAsBE,KAAKf,MAAMb,OAAOmC,WAE3B,IAAvBP,KAAKf,MAAMC,SACX,wBAAIY,UAAU,MACVU,QAAS,kBAAK,EAAKpB,YAAW,KACzB,WAIc,IAAvBY,KAAKf,MAAMC,SACX,8BACI,wBAAIY,UAAU,MACNU,QAAS,kBAAM,EAAKlB,OACvB,UAEL,wBAAIQ,UAAU,MACNU,QAAS,kBAAM,EAAKrB,MAAMsB,aAAa,EAAKxB,MAAMb,UAD1D,c,GA1DSsC,IAAMC,WCuCxBC,E,uKAxCD,IAAD,OACL,OACI,2BAAOd,UAAU,eACb,wBAAIA,UAAU,gCACV,wBAAIe,QAAQ,KAAZ,UAGAb,KAAKb,MAAM2B,QAAQC,KAAI,SAAA3C,GAAM,OACzB,kBAAC,EAAD,CAAoBA,OAAQA,EACR4C,IAAK5C,EAAOoB,IACZiB,aAAc,EAAKtB,MAAMsB,kBAIrD,wBAAIX,UAAU,gCACV,wBAAIe,QAAQ,KAAZ,cAGAb,KAAKb,MAAM2B,QAAQC,KAAI,SAAA3C,GAAM,OACzB,kBAAC,EAAD,CAAoBA,OAAQA,EACR4C,IAAK5C,EAAOoB,IACZiB,aAAc,EAAKtB,MAAMsB,kBAIrD,wBAAIX,UAAU,gCACV,wBAAIe,QAAQ,KAAZ,aAGAb,KAAKb,MAAM2B,QAAQC,KAAI,SAAA3C,GAAM,OACzB,kBAAC,EAAD,CAAoBA,OAAQA,EACR4C,IAAK5C,EAAOoB,IACZiB,aAAc,EAAKtB,MAAMsB,uB,GAjClCC,IAAMC,WCc1BM,E,uKAZP,OACI,yBAAKnB,UAAU,gCACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAcE,KAAKb,MAAMf,OAAOyB,OAC9C,uBAAGC,UAAU,aAAa,UAAYE,KAAKb,MAAMf,OAAOkC,OACxD,kBAAC,IAAD,CAAML,GAAE,kBAAaD,KAAKb,MAAMf,OAAOoB,KAAOM,UAAU,gBAAxD,c,GAPcY,IAAMC,WCiBzBO,E,uKAfP,OACI,yBAAKpB,UAAU,mBACX,yBAAKA,UAAU,iCAEPE,KAAKb,MAAM2B,QAAQC,KAAI,SAAA3C,GAAM,OACzB,kBAAC,EAAD,CAAqBA,OAAQA,EACL4C,IAAK5C,EAAOoB,e,GAR9BkB,IAAMC,WC0IzBQ,E,4MArIXlC,MAAQ,CACJmC,OAAQ,EAAKjC,MAAMjB,MAAMmD,OAAOD,OAChCN,QAAS,GACTQ,eAAgB,I,EAkBpBC,UAAY,SAACH,GAAD,OACR,EAAKjC,MAAMqC,QAAQC,KAAnB,WAA4BL,EAA5B,c,EAEJM,UAAY,SAAC7B,GAAD,OACRN,EAA2B,CACzBM,MAAOA,EACPS,MAAO,KACPC,UAAW,IAAIoB,MAAQC,iBAEtBjD,MAAK,SAAAkD,GAAkB,OACtB,EAAKxC,UAAS,SAACO,GACf,MAAO,CACLkB,QAAQ,GAAD,mBACFlB,EAAUkB,SADR,CAELe,Y,EAKZpB,aAAe,SAAAqB,GAAiB,OAC5BvC,EAA2BuC,EAAkBtC,KACxCb,MAAK,SAAAc,GAAM,OAAI,EAAKJ,UAAS,SAAAO,GAAS,MAAK,CACxCkB,QAASlB,EACRkB,QAAQiB,QAAO,SAAA3D,GAAM,OAAIA,IAAW0D,a,kEAtC5B,IAAD,OAChBvC,IACKZ,MAAK,SAAAqD,GACF,EAAK3C,SAAS,CAACyB,QAASkB,S,yCAIjBC,EAAWrC,EAAWsC,GAClCD,EAAU/D,MAAMmD,OAAOD,SAAWpB,KAAKb,MAAMjB,MAAMmD,OAAOD,QAC3DpB,KAAKX,SAAS,CACZ+B,OAAQpB,KAAKb,MAAMjB,MAAMmD,OAAOD,W,+BAgC9B,IAAD,OAEL,OADAe,QAAQC,IAAIpC,KAAKb,MAAMjB,MAAMmD,OAAOD,QAEhC,6BACI,yBAAKtB,UAAU,WAAWuC,GAAG,eACzB,wBAAIvC,UAAU,mDACV,wBAAIA,UAAU,YACV,4BAAQA,UAAU,yBAAlB,UAEJ,wBAAIA,UAAU,YACV,4BAAQA,UAAU,yBAAlB,YAEJ,wBAAIA,UAAU,YACV,4BAAQA,UAAU,yBAAlB,aAEJ,wBAAIA,UAAU,YACV,0BAAMA,UAAU,0CAChB,2BAAOA,UAAU,eACTI,SAAU,SAACC,GAAD,OAAW,EAAKd,SAAS,CAC/BiC,eAAgBnB,EAAMC,OAAOC,SAEjCA,MAAOL,KAAKf,MAAMqC,eAClBgB,YAAY,mBAGxB,wBAAIxC,UAAU,wBACV,4BAAQA,UAAU,oDACVU,QAAS,kBAAM,EAAKkB,UAAU,EAAKzC,MAAMqC,kBAC5C,QAMjB,yBAAKxB,UAAU,8BACX,yBAAKA,UAAU,4BACX,4BAAQA,UAAU,0DAA0DyC,KAAK,SAASC,cAAY,WAAWC,cAAY,eAAeC,gBAAc,cAAcC,gBAAc,QAAQC,aAAW,qBACrM,0BAAM9C,UAAU,yBAEpB,yBAAKA,UAAU,8DAAf,kBAE0B,UAAtBE,KAAKf,MAAMmC,QACX,4BAAQtB,UAAU,iCACVU,QAAS,kBAAM,EAAKe,UAAU,UADtC,QAMsB,SAAtBvB,KAAKf,MAAMmC,QACX,4BAAQtB,UAAU,+CACVU,QAAS,kBAAM,EAAKe,UAAU,WADtC,WAQc,UAAtBvB,KAAKf,MAAMmC,QACX,2BAAOtB,UAAU,oBACb,2BAAOA,UAAU,WACb,wBAAIA,UAAU,kBACV,wBAAIC,MAAM,MAAMD,UAAU,0BAA1B,SACA,wBAAIC,MAAM,MAAMD,UAAU,0BAA1B,SACA,wBAAIC,MAAM,MAAMD,UAAU,kCAA1B,iBAEA,wBAAIA,UAAU,kCAAkCC,MAAM,OAClD,4BAAQD,UAAU,6BACb,mBAKjB,kBAAC,EAAD,CAAsBgB,QAASd,KAAKf,MAAM6B,QAClBL,aAAcT,KAAKS,gBAIzB,SAAtBT,KAAKf,MAAMmC,QACX,kBAAC,EAAD,CAAqBN,QAASd,KAAKf,MAAM6B,e,GA/HxBJ,IAAMC,WCQ5BkC,E,uKAXP,OACI,4BAAQ/C,UAAU,gGACd,yBAAKA,UAAU,wCACX,yBAAKA,UAAU,0BAA0BE,KAAKb,MAAM2D,OAAOjD,OAC3D,yBAAKC,UAAU,6DAAf,c,GANUY,IAAMC,WCiBrBoC,E,uKAbP,OACI,wBAAIjD,UAAU,+BAENE,KAAKb,MAAM6D,QAAQjC,KAAI,SAAA+B,GAAM,OACzB,kBAAC,EAAD,CAAiBA,OAAQA,EACL9B,IAAK8B,EAAOjD,gB,GAPtBa,IAAMC,WCMzBsC,E,uKANP,OACI,4BAAQnD,UAAU,2DAA2DE,KAAKb,MAAM+D,OAAOrD,W,GAH1Ea,IAAMC,WCUxBwC,E,uKAPP,OAAOnD,KAAKb,MAAMiE,QAAQrC,KAAI,SAAAmC,GAAM,OAChC,kBAAC,EAAD,CAAoBA,OAAQA,EACRlC,IAAKkC,EAAOrD,e,GAJVa,IAAMC,WCOzB0C,E,uKANP,OACI,4BAAQvD,UAAU,6CAA6CE,KAAKb,MAAMmE,MAAMzD,W,GAH3Da,IAAMC,WCkBxB4C,E,uKAdP,OACI,yBAAKzD,UAAU,2DAEPE,KAAKb,MAAMqE,OAAOzC,KAAI,SAAAuC,GAAK,OACvB,kBAAC,EAAD,CAAoBA,MAAOA,EACPtC,IAAKsC,EAAMzD,WAGvC,4BAAQC,UAAU,2DAA4D,U,GAV5DY,IAAMC,WCsDzB8C,E,4MAlDXxE,MAAQ,CACJmE,QAAS,CACL,CAAEvD,MAAO,UACT,CAAEA,MAAO,UACT,CAAEA,MAAO,WAEbmD,QAAU,CACN,CAAEnD,MAAO,YACT,CAAEA,MAAO,YACT,CAAEA,MAAO,YACT,CAAEA,MAAO,YACT,CAAEA,MAAO,aAEb2D,OAAQ,CACJ,CAAE3D,MAAO,WACT,CAAEA,MAAO,WACT,CAAEA,MAAO,a,uDAIb,OACI,yBAAKC,UAAU,oCACX,yBAAKA,UAAU,+DACX,yBAAKA,UAAU,mCACX,kBAAC,IAAD,CAAMA,UAAU,4FAA4FG,GAAI,kBAAhH,QAGA,yBAAKH,UAAU,0CAAf,gBACA,kBAAC,EAAD,CAAqBsD,QAASpD,KAAKf,MAAMmE,UACzC,4BAAQtD,UAAU,uDAAuD,OAGjF,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,+BACX,kBAAC,EAAD,CAAqBkD,QAAShD,KAAKf,MAAM+D,UACzC,4BAAQlD,UAAU,qEAAqE,MAE3F,yBAAKA,UAAU,qCACX,kBAAC,EAAD,CAAqB0D,OAAQxD,KAAKf,MAAMuE,SACxC,yBAAK1D,UAAU,0CACX,uCACA,yBAAKA,UAAU,iBAAf,6N,GA1CYY,IAAMC,WCkB3B+C,MAnBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,GACrB,kBAAC,IAAD,CAAU3D,GAAI,oBAGhB,kBAAC,IAAD,CAAO0D,KAAK,WAAWE,UAAW1C,IAElC,kBAAC,IAAD,CACMwC,KAAK,mBACLC,OAAO,EACPC,UAAW1C,IAEjB,kBAAC,IAAD,CAAOwC,KAAK,UAAUE,UAAWJ,M,wBCTvCK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SfoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1F,MAAK,SAAA2F,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtC,QAAQsC,MAAMA,EAAMC,c","file":"static/js/main.9b749a6f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nconst url = 'https://wbdv-generic-server.herokuapp.com/api/apetrides/courses';\n\nconst createCourse = (course) =>\n    fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(course),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nconst findAllCourses = () =>\n    fetch(url)\n        .then(allCourses => allCourses.json())\n\nconst findCourseById = courseId =>\n    fetch(url + '/' + courseId)\n        .then(response => response.json())\n\nconst updateCourse = (courseId, course) =>\n    fetch(url + '/' + courseId, {\n        method: 'PUT',\n        body: JSON.stringify(course),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nconst deleteCourse = courseId =>\n    fetch(url + '/' + courseId, {\n        method: 'DELETE'\n    })\n        .then(response => response.json())\n\nexport default {\n    createCourse,\n    findCourseById,\n    findAllCourses,\n    updateCourse,\n    deleteCourse\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CourseService from '../services/CourseService'\n\nclass CourseRowComponent extends React.Component {\n    state = {\n        editing: false,\n        course: this.props.course\n    }\n\n    setEditing = (editing) =>\n        this.setState({editing: editing})\n\n    ok = () =>\n        CourseService.updateCourse(\n            this.state.course._id,\n            this.state.course\n        )\n            .then(status => this.setEditing(false))\n\n    updateCourseTitle = newTitle =>\n        this.setState(prevState => ({\n            course: {\n                ...prevState.course,\n                title: newTitle\n            }\n        }))\n\n    render() {\n        return (\n            <tr className=\"wbdv-course wbdv-table-row\">\n                <th scope=\"row\">\n                    {\n                        !this.state.editing &&\n                        <Link className=\"btn wbdv-title\" to={`/editor/${this.state.course._id}`}>\n                            {this.state.course.title}\n                        </Link>\n                    }\n                    {\n                        this.state.editing &&\n                        <input\n                        className=\"form-control\"\n                        onChange={(event) => this.updateCourseTitle(event.target.value)}\n                        value={this.state.course.title}/>\n                    }\n                </th>\n                <td className=\"wbdv-owner\">{this.state.course.owner}</td>\n                <td className=\"wbdv-modified-date\">{this.state.course.modified}</td>\n                {\n                    this.state.editing === false &&\n                    <td className='btn'\n                        onClick={()=> this.setEditing(true)}>\n                            {'\\u270E'}\n                    </td>\n                }\n                {\n                    this.state.editing === true &&\n                    <span>\n                        <td className=\"btn\"\n                                onClick={() => this.ok()}>\n                            {'\\u2713'}\n                        </td>\n                        <td className=\"btn\"\n                                onClick={() => this.props.removeCourse(this.state.course)}>\n                            &times;\n                        </td>\n                    </span>\n                }\n            </tr>\n        );\n    }\n}\n\nexport default CourseRowComponent;","import React from 'react';\nimport CourseRowComponent from './CourseRowComponent';\n\nclass CourseTableComponent extends React.Component {\n    render() {\n        return (\n            <tbody className=\"all-classes\">\n                <tr className=\"bg-dark wbdv-table-title-row\">\n                    <th colSpan=\"4\">Today</th>\n                </tr>\n                {\n                    this.props.courses.map(course =>\n                        <CourseRowComponent course={course}\n                                            key={course._id}\n                                            removeCourse={this.props.removeCourse}/>\n                        )\n                }\n\n                <tr className=\"bg-dark wbdv-table-title-row\">\n                    <th colSpan=\"4\">Yesterday</th>\n                </tr>\n                {\n                    this.props.courses.map(course =>\n                        <CourseRowComponent course={course}\n                                            key={course._id}\n                                            removeCourse={this.props.removeCourse}/>\n                    )\n                }\n\n                <tr className=\"bg-dark wbdv-table-title-row\">\n                    <th colSpan=\"4\">Previous</th>\n                </tr>\n                {\n                    this.props.courses.map(course =>\n                        <CourseRowComponent course={course}\n                                            key={course._id}\n                                            removeCourse={this.props.removeCourse}/>\n                    )\n                }\n            </tbody>\n        );\n    }\n}\n\nexport default CourseTableComponent;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nclass CourseCardComponent extends React.Component {\n    render () {\n        return (\n            <div className=\"card course-card text-center\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{this.props.course.title}</h5>\n                    <p className=\"card-text\">{'owner: ' + this.props.course.owner}</p>\n                    <Link to={`/editor/${this.props.course._id}`} className=\"btn btn-dark\">Edit</Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CourseCardComponent;","import React from 'react';\nimport CourseCardComponent from './CourseCardComponent';\n\nclass CourseGridComponent extends React.Component {\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"classes-grid d-flex flex-wrap\">\n                    {\n                        this.props.courses.map(course =>\n                            <CourseCardComponent course={course}\n                                                    key={course._id}/>\n                        )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CourseGridComponent;","import React from 'react';\n\nimport CourseTableComponent from '../components/CourseTableComponent';\nimport CourseGridComponent from '../components/CourseGridComponent';\n\nimport CourseService from '../services/CourseService';\n\nclass CourseManagerContainer extends React.Component {\n    state = {\n        layout: this.props.match.params.layout,\n        courses: [],\n        newCourseTitle: ''\n    }\n\n    componentDidMount() {\n        CourseService.findAllCourses()\n            .then(courseArray => {\n                this.setState({courses: courseArray});\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.match.params.layout !== this.props.match.params.layout) {\n          this.setState({\n            layout: this.props.match.params.layout\n          })\n        }\n      }\n    \n    setLayout = (layout) =>\n        this.props.history.push(`/${layout}/courses`)\n\n    addCourse = (title) =>\n        CourseService.createCourse({\n          title: title,\n          owner: 'me',\n          modified: (new Date()).toDateString()\n        })\n          .then(theActualNewCourse =>\n            this.setState((prevState) => {\n            return {\n              courses: [\n                ...prevState.courses,\n                theActualNewCourse\n              ]\n            }\n          }))\n\n    removeCourse = courseGoingByeBye => \n        CourseService.deleteCourse(courseGoingByeBye._id)\n            .then(status => this.setState(prevState => ({\n                courses: prevState\n                .courses.filter(course => course !== courseGoingByeBye)\n            })))\n    \n\n    render() {\n        console.log(this.props.match.params.layout);\n        return (\n            <div>\n                <div className=\"collapse\" id=\"navbarLinks\">\n                    <ul className=\"row nav nav-pills bg-dark homepage-button-group\">\n                        <li className=\"nav-item\">\n                            <button className=\"nav-link btn btn-dark\">Login</button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button className=\"nav-link btn btn-dark\">Profile</button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <button className=\"nav-link btn btn-dark\">Register</button>\n                        </li>\n                        <li className=\"nav-item\">\n                            <form className=\"wbdv-field wbdv-new-course form-inline\">\n                            <input className=\"form-control\"\n                                    onChange={(event) => this.setState({\n                                        newCourseTitle: event.target.value\n                                    })}\n                                    value={this.state.newCourseTitle}\n                                    placeholder=\"Course Title\"/>\n                            </form>\n                        </li>\n                        <li className=\"nav-item float-right\">\n                            <button className=\"wbdv-button wbdv-add-course nav-link btn btn-dark\"\n                                    onClick={() => this.addCourse(this.state.newCourseTitle)}>\n                                {'\\u002b'}\n                            </button>\n                        </li>\n                    </ul>\n                </div>\n\n                <nav className=\"navbar navbar-dark bg-dark\">\n                    <div className=\"d-flex flex-row home-nav\">\n                        <button className=\"wbdv-field wbdv-hamburger navbar-toggler d-flex ml-auto\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarLinks\" aria-controls=\"navbarLinks\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"wbdv-label wbdv-course-manager navbar-brand d-flex ml-auto\">Course Manager</div>\n                        {\n                            this.state.layout === 'table' &&\n                            <button className=\"btn ml-auto d-flex wbdv-button\"\n                                    onClick={() => this.setLayout('grid')}>\n                                Grid\n                            </button>\n                        }\n                        {\n                            this.state.layout === 'grid' &&\n                            <button className=\"btn d-flex justify-content-right wbdv-button\"\n                                    onClick={() => this.setLayout('table')}>\n                                Table\n                            </button>\n                        }\n                    </div>\n                </nav>\n                {\n                    this.state.layout === 'table' &&\n                    <table className='table wbdv-table'>\n                        <thead className=\"headers\">\n                            <tr className=\"wbdv-table-row\">\n                                <th scope=\"col\" className=\"wbdv-header wbdv-title\">Title</th>\n                                <th scope=\"col\" className=\"wbdv-header wbdv-owner\">Owner</th>\n                                <th scope=\"col\" className=\"wbdv-header wbdv-last-modified\">Last Modified</th>\n                                    \n                                <th className=\"wbdv-header wbdv-header-buttons\" scope=\"col\">\n                                    <button className=\"wbdv-button wbdv-sort btn\">\n                                        {'\\u2191\\u2193'}\n                                    </button>\n                                </th>\n                            </tr>\n                        </thead>\n                        <CourseTableComponent courses={this.state.courses}\n                                                removeCourse={this.removeCourse}/>\n                    </table>\n                }\n                {\n                    this.state.layout === 'grid' &&\n                    <CourseGridComponent courses={this.state.courses}/>\n                }\n            </div>\n        );\n    }\n}\n\nexport default CourseManagerContainer;","import React from 'react';\n\nclass ModuleComponent extends React.Component {\n    render() {\n        return(\n            <button className=\"btn wbdv-module-item list-group-item list-group-item-action d-flex align-items-start rounded\">\n                <div className=\"d-flex w-100 justify-content-between\">\n                    <div className=\"wbdv-module-item-title\">{this.props.module.title}</div>\n                    <div className=\"wbdv-module-item-delete-btn btn editor-btn rounded-circle\">&times;</div>\n                </div>\n            </button>\n        );\n    }\n}\n\nexport default ModuleComponent;","import React from 'react';\n\nimport ModuleComponent from '../components/ModuleComponent';\n\nclass ModuleListContainer extends React.Component {\n    render() {\n        return (\n            <ul className=\"list-group wbdv-module-list\">\n                {\n                    this.props.modules.map(module =>\n                        <ModuleComponent module={module}\n                                            key={module.title}/>\n                    )\n                }\n            </ul>\n        );\n    }\n}\n\nexport default ModuleListContainer;","import React from 'react';\n\nclass LessonTabComponent extends React.Component {\n    render() {\n        return (\n            <button className=\"wbdv-page-tab btn editor-btn active nav-item light-text\">{this.props.lesson.title}</button>\n        );\n    }\n}\n\nexport default LessonTabComponent;","import React from 'react';\nimport LessonTabComponent from '../components/LessonTabComponent';\n\nclass LessonTabsContainer extends React.Component {\n    render() {\n        return this.props.lessons.map(lesson =>\n            <LessonTabComponent lesson={lesson}\n                                key={lesson.title}/>\n        )\n    }\n}\n\nexport default LessonTabsContainer;","import React from 'react';\n\nclass TopicPillComponent extends React.Component {\n    render() {\n        return (\n            <button className=\"wbdv-topic-pill active-topic btn btn-dark\">{this.props.topic.title}</button>\n        );\n    }\n}\n\nexport default TopicPillComponent;","import React from 'react';\n\nimport TopicPillComponent from '../components/TopicPillComponent';\n\nclass TopicPillsContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"wbdv-topic-pill-list d-flex flex-row align-items-center\">\n                {\n                    this.props.topics.map(topic =>\n                        <TopicPillComponent topic={topic}\n                                            key={topic.title}/>\n                    )\n                }\n                <button className=\"wbdv-topic-add-btn btn rounded-circle dark-text ml-auto\" >{'\\u002b'}</button>\n            </div>\n        );\n    }\n}\n\nexport default TopicPillsContainer","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ModuleListContainer from './ModuleListContainer';\nimport LessonTabsContainer from './LessonTabsContainer';\nimport TopicPillsContainer from './TopicPillsContainer';\n\nclass CourseEditorContainer extends React.Component {\n    state = {\n        lessons: [\n            { title: 'Page 1' },\n            { title: 'Page 2' },\n            { title: 'Page 3' }\n        ],\n        modules : [\n            { title: 'Module 1' },\n            { title: 'Module 2' },\n            { title: 'Module 3' },\n            { title: 'Module 4' },\n            { title: 'Module 5' }\n        ],\n        topics: [\n            { title: 'Topic 1' },\n            { title: 'Topic 2' },\n            { title: 'Topic 3' }\n        ]\n    }\n    render() {\n        return (\n            <div className=\"container-fluid editor-container\">\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark d-flex flex-row\">\n                    <div className=\"d-flex w-100 align-items-center\">\n                        <Link className=\"wbdv-course-editor wbdv-close mr-auto nav-link btn btn-dark rounded-circle nav-light-text\" to={'/table/courses'}>\n                            &times;\n                        </Link>\n                        <div className=\"wbdv-course-title navbar-brand mr-auto\">Course Title</div>\n                        <LessonTabsContainer lessons={this.state.lessons}/>\n                        <button className=\"wbdv-new-page-btn btn editor-btn light-text ml-auto\">{'\\u002b'}</button>\n                    </div>\n                </nav>\n                <div className=\"row editor-row\">\n                <div className=\"content-frame col-4 rounded\">\n                    <ModuleListContainer modules={this.state.modules}/>\n                    <button className=\"wbdv-module-item-add-btn btn editor-btn light-text rounded-circle\">{'\\u002b'}</button>\n                </div>\n                <div className=\"content-frame-right col-8 rounded\">\n                    <TopicPillsContainer topics={this.state.topics}/>\n                    <div className=\"topic-frame border border-dark rounded\">\n                        <h4>Heading</h4>\n                        <div className=\"topic-content\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad expedita dolorum nemo, voluptatem quasi id ab porro enim recusandae modi nostrum nulla ullam magni architecto doloremque explicabo. Facere, animi in.</div>\n                    </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CourseEditorContainer;","import React from 'react';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\n\nimport CourseManagerContainer from './containers/CourseManagerContainer';\nimport CourseEditorContainer from './containers/CourseEditorContainer';\n\nfunction WhiteBoard() {\n  return (\n    <BrowserRouter>\n      <Route path='/' exact={true}>\n        <Redirect to={'/table/courses'}/>\n      </Route>\n\n      <Route path='/courses' component={CourseManagerContainer}/>\n\n      <Route\n            path='/:layout/courses'\n            exact={true}\n            component={CourseManagerContainer}/>\n            \n      <Route path='/editor' component={CourseEditorContainer}/>\n    </BrowserRouter>\n  );\n}\n\nexport default WhiteBoard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport WhiteBoard from './WhiteBoard';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport './index.css';\nimport './WhiteBoard.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WhiteBoard/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}